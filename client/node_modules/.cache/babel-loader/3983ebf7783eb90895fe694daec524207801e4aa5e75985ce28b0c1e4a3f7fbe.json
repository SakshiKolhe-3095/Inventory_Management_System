{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saksh\\\\OneDrive\\\\Documents\\\\Internship-Mechtronix\\\\Mechtronix-A-Project2\\\\client\\\\src\\\\auth\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport API from '../api/axios'; // Your configured Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [authError, setAuthError] = useState(null);\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\n  const [authActionInProgress, setAuthActionInProgress] = useState(false);\n\n  // Debugging: Log token state on component mount/update\n  useEffect(() => {\n    console.log('AuthContext mounted/updated. Current token state:', token ? 'Token present' : 'No token');\n    if (token) {\n      // Also set the default header for Axios immediately if token exists\n      API.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }, [token]);\n  const logout = useCallback(() => {\n    console.log('Logging out...');\n    setUser(null);\n    setToken(null);\n    setAuthError(null);\n    localStorage.removeItem('token');\n    delete API.defaults.headers.common['Authorization'];\n    console.log('Logout complete. Token removed.');\n  }, []);\n  const fetchUserProfile = useCallback(async () => {\n    console.log('fetchUserProfile called. Token:', token); // Debugging\n    if (!token) {\n      console.log('No token in fetchUserProfile, setting loadingAuthState to false.'); // Debugging\n      setLoadingAuthState(false);\n      return;\n    }\n    try {\n      // Ensure the header is set for this specific request, though interceptor should handle\n      API.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      console.log('Attempting to fetch profile with token:', token.substring(0, 10) + '...'); // Debugging: partial token\n      const response = await API.get('/auth/profile');\n      setUser(response.data);\n      setAuthError(null);\n      console.log('User profile fetched successfully:', response.data.name); // Debugging\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('🔐 Auth failed (fetchUserProfile):', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      logout();\n      setAuthError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Session expired or unauthorized.');\n    } finally {\n      setLoadingAuthState(false);\n      console.log('fetchUserProfile finished. loadingAuthState set to false.'); // Debugging\n    }\n  }, [token, logout]);\n  useEffect(() => {\n    fetchUserProfile();\n  }, [fetchUserProfile]);\n  const login = async (email, password) => {\n    setAuthActionInProgress(true);\n    setAuthError(null);\n    try {\n      const res = await API.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        ...userData\n      } = res.data;\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n      API.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      console.log('Login successful. New token set:', newToken.substring(0, 10) + '...'); // Debugging\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed. Please check your credentials.';\n      setAuthError(message);\n      console.error('Login failed:', message); // Debugging\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setAuthActionInProgress(false);\n    }\n  };\n  const register = async (name, email, password, role = 'client') => {\n    setAuthActionInProgress(true);\n    setAuthError(null);\n    try {\n      const res = await API.post('/auth/register', {\n        name,\n        email,\n        password,\n        role\n      });\n      const {\n        token: newToken,\n        ...userData\n      } = res.data;\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n      API.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      console.log('Registration successful. New token set:', newToken.substring(0, 10) + '...'); // Debugging\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Registration failed. Please try again with different details.';\n      setAuthError(message);\n      console.error('Registration failed:', message); // Debugging\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setAuthActionInProgress(false);\n    }\n  };\n  const value = {\n    user,\n    token,\n    authError,\n    isAuthenticated: !!user && !!token,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    isClient: (user === null || user === void 0 ? void 0 : user.role) === 'client',\n    loadingAuthState,\n    authActionInProgress,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loadingAuthState && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"E8zXvuuHV6Rp7SIrDYKVLQGTJUE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","API","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","authError","setAuthError","loadingAuthState","setLoadingAuthState","authActionInProgress","setAuthActionInProgress","console","log","defaults","headers","common","logout","removeItem","fetchUserProfile","substring","response","get","data","name","error","_error$response","_error$response$data","_error$response2","_error$response2$data","message","login","email","password","res","post","newToken","userData","setItem","success","_error$response3","_error$response3$data","register","role","_error$response4","_error$response4$data","value","isAuthenticated","isAdmin","isClient","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saksh/OneDrive/Documents/Internship-Mechtronix/Mechtronix-A-Project2/client/src/auth/AuthContext.jsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from 'react';\r\nimport API from '../api/axios'; // Your configured Axios instance\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const [authError, setAuthError] = useState(null);\r\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\r\n  const [authActionInProgress, setAuthActionInProgress] = useState(false);\r\n\r\n  // Debugging: Log token state on component mount/update\r\n  useEffect(() => {\r\n    console.log('AuthContext mounted/updated. Current token state:', token ? 'Token present' : 'No token');\r\n    if (token) {\r\n      // Also set the default header for Axios immediately if token exists\r\n      API.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n  }, [token]);\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    console.log('Logging out...');\r\n    setUser(null);\r\n    setToken(null);\r\n    setAuthError(null);\r\n    localStorage.removeItem('token');\r\n    delete API.defaults.headers.common['Authorization'];\r\n    console.log('Logout complete. Token removed.');\r\n  }, []);\r\n\r\n  const fetchUserProfile = useCallback(async () => {\r\n    console.log('fetchUserProfile called. Token:', token); // Debugging\r\n    if (!token) {\r\n      console.log('No token in fetchUserProfile, setting loadingAuthState to false.'); // Debugging\r\n      setLoadingAuthState(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Ensure the header is set for this specific request, though interceptor should handle\r\n      API.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      console.log('Attempting to fetch profile with token:', token.substring(0, 10) + '...'); // Debugging: partial token\r\n      const response = await API.get('/auth/profile');\r\n      setUser(response.data);\r\n      setAuthError(null);\r\n      console.log('User profile fetched successfully:', response.data.name); // Debugging\r\n    } catch (error) {\r\n      console.error('🔐 Auth failed (fetchUserProfile):', error.response?.data?.message || error.message);\r\n      logout();\r\n      setAuthError(error.response?.data?.message || 'Session expired or unauthorized.');\r\n    } finally {\r\n      setLoadingAuthState(false);\r\n      console.log('fetchUserProfile finished. loadingAuthState set to false.'); // Debugging\r\n    }\r\n  }, [token, logout]);\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, [fetchUserProfile]);\r\n\r\n\r\n  const login = async (email, password) => {\r\n    setAuthActionInProgress(true);\r\n    setAuthError(null);\r\n    try {\r\n      const res = await API.post('/auth/login', { email, password });\r\n      const { token: newToken, ...userData } = res.data;\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      localStorage.setItem('token', newToken);\r\n      API.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      console.log('Login successful. New token set:', newToken.substring(0, 10) + '...'); // Debugging\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed. Please check your credentials.';\r\n      setAuthError(message);\r\n      console.error('Login failed:', message); // Debugging\r\n      return { success: false, message };\r\n    } finally {\r\n      setAuthActionInProgress(false);\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password, role = 'client') => {\r\n    setAuthActionInProgress(true);\r\n    setAuthError(null);\r\n    try {\r\n      const res = await API.post('/auth/register', { name, email, password, role });\r\n      const { token: newToken, ...userData } = res.data;\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      localStorage.setItem('token', newToken);\r\n      API.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      console.log('Registration successful. New token set:', newToken.substring(0, 10) + '...'); // Debugging\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed. Please try again with different details.';\r\n      setAuthError(message);\r\n      console.error('Registration failed:', message); // Debugging\r\n      return { success: false, message };\r\n    } finally {\r\n      setAuthActionInProgress(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    authError,\r\n    isAuthenticated: !!user && !!token,\r\n    isAdmin: user?.role === 'admin',\r\n    isClient: user?.role === 'client',\r\n    loadingAuthState,\r\n    authActionInProgress,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loadingAuthState && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}